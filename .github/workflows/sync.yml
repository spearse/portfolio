name: Sync Approved Summaries

on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * 1"   # Every Monday 09:00 UTC (optional)

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Checkout private repo (read-only)
        uses: actions/checkout@v4
        with:
          repository: spearse/projectsummaries   # <-- your PRIVATE repo name
          token: ${{ secrets.PRIVATE_REPO_PAT }} # <-- fine-grained PAT secret on public repo
          path: private_src
          ref: main
          submodules: false
          fetch-depth: 1

      - name: Prepare folders
        run: |
          mkdir -p projects
          rm -rf projects/*

      - name: Copy approved project summaries
        run: |
          cp "private_src/approved/Ableton-Copilot.md" "projects/01-Ableton-Copilot.md"
          cp "private_src/approved/CLaMP3 Audio Semantic Search.md" "projects/02-CLaMP3-Audio-Semantic-Search.md"
          cp "private_src/approved/Density Audio Workstation.md" "projects/03-Density-DAW.md"
          cp "private_src/approved/Density Pro - Full Stack.md" "projects/04-Density-Pro-Full-Stack.md"

      - name: Build index.md
        run: |
          python - <<'PY'
          import os, urllib.parse
          files = sorted([f for f in os.listdir('projects') if f.endswith('.md')])
          with open('index.md', 'w', encoding='utf-8') as out:
              out.write('---\nlayout: home\ntitle: Selected Projects\n---\n\n')
              out.write("Welcome! These are curated projects across Audio, AI, and full-stack engineering.\n\n")
              for f in files:
                  title = os.path.splitext(f)[0].split('-', 1)[-1].replace('-', ' ')
                  url = 'projects/' + urllib.parse.quote(f)
                  out.write(f'- [{title}]({url})\n')
          PY

      - name: Ensure Jekyll config exists
        run: |
          if [ ! -f _config.yml ]; then
            cat > _config.yml <<'YML'
          title: Audio • AI • Engineering
          theme: minima
          description: Selected project summaries by <Your Name>
          markdown: kramdown
          YML
          fi

      - name: Commit and push changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "Sync approved summaries from private repo"
            git push
          else
            echo "No changes to commit."
          fi
